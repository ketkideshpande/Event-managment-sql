create or replace PROCEDURE ADD_SERVICE_TO_EVENT (I_CUSTOMER_NAME IN VARCHAR, I_STREET_NAME IN VARCHAR, I_CITY_NAME IN VARCHAR, 
        I_STATE_CODE IN VARCHAR, I_ZIP_CODE IN VARCHAR, I_START_DATE IN DATE, I_END_DATE IN DATE, 
        I_SERVICE_TYPE IN VARCHAR, I_SERVICE_DATE IN DATE) 
AS
    V_RESERVATION_ID EVENTS.RESERVATION_ID%TYPE;
    V_SERVICE_COUNT INTEGER;
BEGIN
    DBMS_OUTPUT.PUT_LINE('-- ADD_SERVICE_TO_EVENT ');
    DBMS_OUTPUT.PUT_LINE('SERVICE_TYPE   : ' || I_SERVICE_TYPE);
    DBMS_OUTPUT.PUT_LINE('SERVICE_DATE   : ' || I_SERVICE_DATE);

    IF I_SERVICE_TYPE IS NULL
    THEN
        RAISE_APPLICATION_ERROR(-20020, 'INVALID SERVICE TYPE: CANNOT BE NULL');
    END IF;
    
    IF I_SERVICE_DATE IS NULL
    THEN
        RAISE_APPLICATION_ERROR(-20030, 'INVALID SERVICE DATE : CANNOT BE NULL');
    END IF;

    V_RESERVATION_ID := FIND_RESERVATION_ID(I_CUSTOMER_NAME, I_STREET_NAME, I_CITY_NAME, I_STATE_CODE, I_ZIP_CODE, I_START_DATE, I_END_DATE); 
    
    BEGIN
        SELECT RESERVATION_ID INTO V_RESERVATION_ID
        FROM EVENTS
        WHERE RESERVATION_ID = V_RESERVATION_ID
        AND I_SERVICE_DATE BETWEEN START_DATE AND END_DATE;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20012, 'INVALID SERVICE DATE : NO RESERVATION FOUND ON GIVEN DATE [' || 
                                            TO_CHAR(I_SERVICE_DATE, 'YYYY-MM-DD') || 
                                            '] WITH RESERVATION ID [' || V_RESERVATION_ID || ']');
    END;
       

    SELECT COUNT(1) INTO V_SERVICE_COUNT
    FROM SERVICERESERVATION
    WHERE RESERVATION_ID = V_RESERVATION_ID
    AND SERVICE_TYPE = I_SERVICE_TYPE
    AND SERVICE_DATE = I_SERVICE_DATE;
        
    IF V_SERVICE_COUNT = 0
    THEN
        INSERT INTO SERVICERESERVATION
        VALUES (servicereservation_seq.NEXTVAL,
                V_RESERVATION_ID,
                I_SERVICE_DATE,
                UPPER(I_SERVICE_TYPE));
        COMMIT;
    
        DBMS_OUTPUT.PUT_LINE('-- ADD_SERVICE_TO_EVENT - SERVICE RESERVATION SUCCCESFUL');
        RETURN;
    END IF;
     

    RAISE_APPLICATION_ERROR(-20013, 'DUPLICATE SERVICE RESERVATION FOUND');
    
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
        DBMS_OUTPUT.PUT_LINE('-- ADD_SERVICE_TO_EVENT - FAILED');
        RAISE;
END ADD_SERVICE_TO_EVENT;