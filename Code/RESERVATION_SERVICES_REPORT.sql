create or replace PROCEDURE RESERVATION_SERVICES_REPORT(I_CUSTOMER_NAME IN VARCHAR, I_STREET_NAME IN VARCHAR, I_CITY_NAME IN VARCHAR, 
        I_STATE_CODE IN VARCHAR, I_ZIP_CODE IN VARCHAR, I_START_DATE IN DATE, I_END_DATE IN DATE) AS 
    
    V_PEOPLE_ATTENDING INTEGER := 0;
    V_RESERVATION_ID INTEGER := 0;
    V_SERVICE_TYPE SERVICERESERVATION.SERVICE_TYPE%TYPE;
    V_SERVICE_DATE SERVICERESERVATION.SERVICE_DATE%TYPE;
    
    CURSOR DISPLAY_SERVICES(C_RESERVATION_ID INTEGER) IS 
        SELECT SERVICE_TYPE, SERVICE_DATE 
        FROM SERVICERESERVATION 
        WHERE RESERVATION_ID = C_RESERVATION_ID
        ORDER BY SERVICE_DATE;
        
BEGIN
    DBMS_OUTPUT.PUT_LINE('-- RESERVATION SERVICES REPORT');
    
    V_RESERVATION_ID := FIND_RESERVATION_ID(I_CUSTOMER_NAME, I_STREET_NAME, I_CITY_NAME, I_STATE_CODE, I_ZIP_CODE, I_START_DATE, I_END_DATE); 
    
    OPEN DISPLAY_SERVICES (V_RESERVATION_ID);
    LOOP
        FETCH DISPLAY_SERVICES INTO V_SERVICE_TYPE, V_SERVICE_DATE;
        EXIT WHEN DISPLAY_SERVICES%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE ('SERVICE: ' || V_SERVICE_TYPE || ', REGISTERED FOR THE DATE: ' || V_SERVICE_DATE);
    END LOOP;
    CLOSE DISPLAY_SERVICES;
    
    SELECT PEOPLE_ATTENDING INTO V_PEOPLE_ATTENDING 
    FROM EVENTS 
    WHERE RESERVATION_ID = V_RESERVATION_ID;
    DBMS_OUTPUT.PUT_LINE ('NUMBER OF PEOPLE ATTENDING THE EVENT: ' || V_PEOPLE_ATTENDING || 
                            ' RESERVATION ID: ' || V_RESERVATION_ID);
    
    DBMS_OUTPUT.PUT_LINE('-- RESERVATION_SERVICES_REPORT - SUCCESSFUL');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
        DBMS_OUTPUT.PUT_LINE('-- RESERVATION_SERVICES_REPORT - FAILED');
        RAISE;
END RESERVATION_SERVICES_REPORT;