create or replace PROCEDURE SHOW_AVAILABLE_ROOMS (I_HOTEL_ID IN NUMBER, I_START_DATE IN DATE,I_END_DATE IN DATE, 
O_LARGE_CT OUT NUMBER, O_MED_CT OUT NUMBER, O_SMALL_CT OUT NUMBER) AS

    CURSOR SMALL_RESERVED IS 
		select count(*)
		from roomreservation rrn
		where rrn.hotel_id = i_hotel_id
		and RRN.ROOM_DATE between I_START_DATE AND I_END_DATE
		and room_type = 'SMALL HALL';


	 CURSOR MED_RESERVED IS 
		select 
		count(*)
		from roomreservation rrn
		where rrn.hotel_id = i_hotel_id
		and RRN.ROOM_DATE between I_START_DATE AND I_END_DATE
		and room_type = 'MEDIUM HALL';

	  CURSOR LARGE_RESERVED IS 
		select 
		count(*)
		from roomreservation rrn
		where rrn.hotel_id = i_hotel_id
		and RRN.ROOM_DATE between I_START_DATE AND I_END_DATE
		and room_type = 'LARGE HALL';	

    V_SRT NUMBER;----SMALL ROOM TOTAL
    V_MRT NUMBER;----MEDIUM ROOM TOTAL
    V_LRT NUMBER;----LARGE ROOM TOTAL
    V_SRR NUMBER := 0;----SMALL ROOM RESERVED
    V_MRR NUMBER:= 0;----MEDIUM ROOM RESERVED
    V_LRR NUMBER:= 0;----LARGE ROOM RESERVED
    TEMP NUMBER:= 0 ;
    V_RM_TYPE VARCHAR(10);

BEGIN

    DBMS_OUTPUT.PUT_LINE('---SHOW AVAILABLE ROOMS STARTING---');

    SELECT COUNT(ROOM_ID1) INTO V_SRT FROM EVENT_ROOM1 WHERE HOTEL_ID =  i_hotel_id AND ROOM_TYPE = 'SMALL HALL';
    SELECT COUNT(ROOM_ID1) INTO V_MRT FROM EVENT_ROOM1 WHERE HOTEL_ID =  i_hotel_id AND ROOM_TYPE = 'MEDIUM HALL';
    SELECT COUNT(ROOM_ID1) INTO V_LRT FROM EVENT_ROOM1 WHERE HOTEL_ID =  i_hotel_id AND ROOM_TYPE = 'LARGE HALL';
    DBMS_OUTPUT.PUT_LINE(V_SRT);
    DBMS_OUTPUT.PUT_LINE(V_MRT);
    DBMS_OUTPUT.PUT_LINE(V_LRT);

    OPEN SMALL_RESERVED;
    LOOP
    FETCH SMALL_RESERVED INTO TEMP;
    DBMS_OUTPUT.PUT_LINE(' AT 61 SMALL '|| TEMP);
    EXIT WHEN SMALL_RESERVED%NOTFOUND;
    V_SRR := TEMP;
    END LOOP;
    CLOSE SMALL_RESERVED;

    OPEN MED_RESERVED;
    LOOP
    FETCH MED_RESERVED INTO TEMP;
    DBMS_OUTPUT.PUT_LINE('AT 70 MED '|| TEMP);
    EXIT WHEN MED_RESERVED%NOTFOUND;
    V_MRR := TEMP;
    END LOOP;
    CLOSE MED_RESERVED;

    OPEN LARGE_RESERVED;
    LOOP
    FETCH LARGE_RESERVED INTO TEMP;
    DBMS_OUTPUT.PUT_LINE('AT 79 LARGE '||TEMP);
    EXIT WHEN LARGE_RESERVED%NOTFOUND;
    V_LRR := TEMP;
    END LOOP;
    CLOSE LARGE_RESERVED;	


    O_LARGE_CT :=V_LRT - V_LRR;
    O_MED_CT :=V_MRT - V_MRR;
    O_SMALL_CT :=V_SRT - V_SRR;

    DBMS_OUTPUT.PUT_LINE('O_LARGE_CT '||O_LARGE_CT );
    DBMS_OUTPUT.PUT_LINE('O_MED_CT '||O_MED_CT );
    DBMS_OUTPUT.PUT_LINE('O_SMALL_CT '||O_SMALL_CT );

    DBMS_OUTPUT.PUT_LINE('---SHOW AVAILABLE ROOMS SUCCESSFUL---');

EXCEPTION
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE(SQLERRM);
    DBMS_OUTPUT.PUT_LINE('-- SHOW AVAILABLE ROOMS - FAILED');
    RAISE;

END SHOW_AVAILABLE_ROOMS;
