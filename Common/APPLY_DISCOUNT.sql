create or replace FUNCTION APPLY_DISCOUNT (I_RESERVATION_ID EVENTS.RESERVATION_ID%TYPE, I_TOTAL_COST IN NUMBER) 
RETURN NUMBER AS 
    V_DISCOUNTED_COST NUMBER(10,2);
    V_MONTHS_BETWEEN NUMBER;

BEGIN

    DBMS_OUTPUT.PUT_LINE('-- APPLY_DISCOUNT');

    IF I_TOTAL_COST IS NULL
    THEN
        RAISE_APPLICATION_ERROR(-20022, 'INVALID INPUT TOTAL COST : CANNOT BE NULL');
    END IF;

    -- VALIDATES IF THE INPUT RESERVATION ID IS PRESENT IN THE EVENTS TABLE
    VALIDATE_RES_ID(I_RESERVATION_ID);

    SELECT ROUND(MONTHS_BETWEEN(START_DATE, RESERVATION_DATE), 0) 
    INTO V_MONTHS_BETWEEN 
    FROM EVENTS
    WHERE RESERVATION_ID = I_RESERVATION_ID;

    IF V_MONTHS_BETWEEN >= 2 THEN
        V_DISCOUNTED_COST := 0.1 * I_TOTAL_COST;
    ELSE
        V_DISCOUNTED_COST := 0;
    END IF;
    RETURN V_DISCOUNTED_COST;

EXCEPTION
    WHEN OTHERS THEN
       DBMS_OUTPUT.PUT_LINE(SQLERRM);
       DBMS_OUTPUT.PUT_LINE('-- APPLY_DISCOUNT FAILED');
        RAISE;
END APPLY_DISCOUNT;
